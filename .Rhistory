mutate(age_group = case_when(
age_group == "18" ~ "18-24",
age_group %in% c("19", "20", "21", "22", "23", "24") ~ "18-24",
age_group %in% c("25", "26", "27", "28", "29") ~ "25-29",
age_group %in% c("30", "31", "32", "33", "34") ~ "30-34",
age_group %in% c("35", "36", "37", "38", "39") ~ "35-39",
age_group %in% c("40", "41", "42", "43", "44") ~ "40-44",
age_group %in% c("45", "46", "47", "48", "49") ~ "45-49",
age_group %in% c("50", "51", "52", "53", "54") ~ "50-54",
age_group %in% c("55", "56", "57", "58", "59") ~ "55-59",
age_group %in% c("60", "61", "62", "63", "64") ~ "60-64",
age_group %in% c("65", "66", "67", "68", "69") ~ "65-69",
age_group %in% c("70", "71", "72", "73", "74") ~ "70-74",
age_group %in% c("75", "76", "77", "78", "79") ~ "75-79",
str_detect(age_group, "80_84|85_89|90_94|95_99|100 and over") ~ age_group
))%>%
# Filter out rows with NA in the population
filter(!is.na(age_group), !is.na(population))
# Calculate the average population within each age group
victoria_average_age_data <- g04_data_long %>%
group_by(age_group) %>%
summarise(average_population = mean(population, na.rm = TRUE))%>%
# Remove groups with NA average_population
filter(!is.na(average_population))
# Plotting the data
ggplot(victoria_average_age_data, aes(x = age_group, y = average_population, fill = age_group)) +
geom_col() +
labs(title = "Average Population Distribution by Age Groups for Victoria", x = "Age Groups", y = "Average Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Data taken out for Kooyong
kooyong_population_data_1 <- g04_part1 %>%
filter(CED_CODE_2021 == "CED226")
kooyong_population_data_2 <- g04_part2 %>%
filter(CED_CODE_2021 == "CED226")
# Summarizing the population data for both the genders
population_up_to_17_male <- kooyong_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_M$")) %>%
unlist() %>%
sum(na.rm = TRUE)
population_up_to_17_female <- kooyong_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_F$")) %>%
unlist() %>%
sum(na.rm = TRUE)
# Calculating the sum of population for each gender
total_male_population <- sum(kooyong_population_data_2 %>% select(starts_with("Tot_M")) %>% unlist(), na.rm = TRUE)
total_female_population <- sum(kooyong_population_data_2 %>% select(starts_with("Tot_F")) %>% unlist(), na.rm = TRUE)
# Adjusting the total populations by subtracting the populations up to age 17
adjusted_total_male_population <- total_male_population - population_up_to_17_male
adjusted_total_female_population <- total_female_population - population_up_to_17_female
# Creating a data frame for plotting
kooyong_gender_population <- data.frame(
Gender = c("Male", "Female"),
Adjusted_Population_Data = c(adjusted_total_male_population, adjusted_total_female_population)
)
# Plotting the bar chart
ggplot(kooyong_gender_population, aes(x = Gender, y = Adjusted_Population_Data, fill = Gender)) +
geom_col(width = 0.4) +
scale_y_continuous(labels = scales::comma) + # Adding comma formatting to the y-axis labels
labs(x = "Gender", y = "Population", title = "Population by Gender for Kooyong") +
theme_minimal()
# Data taken out for Victoria
victoria_population_data_1 <- g04_part1
victoria_population_data_2 <- g04_part2
# Summarizing the population data for both the genders
population_up_to_17_male <- victoria_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_M$")) %>%
unlist() %>%
sum(na.rm = TRUE)
population_up_to_17_female <- victoria_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_F$")) %>%
unlist() %>%
sum(na.rm = TRUE)
# Calculating the sum of population for each gender
total_male_population <- sum(victoria_population_data_2 %>% select(starts_with("Tot_M")) %>% unlist(), na.rm = TRUE)
total_female_population <- sum(victoria_population_data_2 %>% select(starts_with("Tot_F")) %>% unlist(), na.rm = TRUE)
# Adjusting the total populations by subtracting the populations up to age 17
adjusted_total_male_population <- total_male_population - population_up_to_17_male
adjusted_total_female_population <- total_female_population - population_up_to_17_female
# Calculating the average of the adjusted total populations for the whole of Victoria
# Dividing by the number of data entries for a true average
avg_adjusted_male_population <- adjusted_total_male_population / nrow(g04_part2)
avg_adjusted_female_population <- adjusted_total_female_population / nrow(g04_part2)
# Creating a data frame for plotting
victoria_gender_population <- data.frame(
Gender = c("Male", "Female"),
Adjusted_Average_Population = c(avg_adjusted_male_population, avg_adjusted_female_population)
)
# Plot the bar chart
ggplot(victoria_gender_population, aes(x = Gender, y = Adjusted_Average_Population, fill = Gender)) +
geom_col(width = 0.4) +
scale_y_continuous(labels = scales::comma) +
labs(x = "Gender", y = "Population", title = "Population by Gender for Kooyong") +
theme_minimal()
# Taking relevant income data from the local repo
g17_part1 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G17B_VIC_CED.csv"))
g17_part2 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G17C_VIC_CED.csv"))
# Filtering data relevant to Kooyong
kooyong_data_combined <- bind_rows(
g17_part1 %>%
filter(CED_CODE_2021 == "CED226"),
g17_part2 %>%
filter(CED_CODE_2021 == "CED226")
)
# Constructing a mapping based on the income ranges
ranges <- c("Negative/Nil income", "$1-$149", "$150-$299", "$300-$399", "$400-$499",
"$500-$649", "$650-$799", "$800-$999", "$1,000-$1,249", "$1,250-$1,499",
"$1,500-$1,749", "$1,750-$1,999", "$2,000-$2,999", "$3,000-$3,499", "$3,500 or more")
column_mappings <- c("Neg_Nil_income", "1_149", "150_299", "300_399", "400_499",
"500_649", "650_799", "800_999", "1000_1249", "1250_1499",
"1500_1749", "1750_1999", "2000_2999", "3000_3499", "3500_more")
# Initializing a data frame to store the results
result_df <- tibble(Range = ranges, Population = numeric(length(ranges)))
# Subtracting and aggregating population values
for (i in seq_along(ranges)) {
age_col <- paste0("P_", column_mappings[i], "_15_19_yrs")
total_col <- paste0("P_", column_mappings[i], "_Tot")
# Taking mean here just for 'na' values resolution
result_df$Population[i] <- mean(kooyong_data_combined[[total_col]] - kooyong_data_combined[[age_col]], na.rm = TRUE)
}
result_df$Range <- factor(result_df$Range, levels = ranges)
# Plotting the bar chart
ggplot(result_df, aes(x = Range, y = Population, fill = Range)) +
geom_col(show.legend = FALSE) +
labs(title = "Population by Income Range for Kooyong",
x = "Income Range",
y = "Population (in thousands)") +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filtering data relevant to all Victoria
victoria_data_combined <- bind_rows(
g17_part1,
g17_part2
)
# Constructing a mapping based on the income ranges
ranges <- c("Negative/Nil income", "$1-$149", "$150-$299", "$300-$399", "$400-$499",
"$500-$649", "$650-$799", "$800-$999", "$1,000-$1,249", "$1,250-$1,499",
"$1,500-$1,749", "$1,750-$1,999", "$2,000-$2,999", "$3,000-$3,499", "$3,500 or more")
column_mappings <- c("Neg_Nil_income", "1_149", "150_299", "300_399", "400_499",
"500_649", "650_799", "800_999", "1000_1249", "1250_1499",
"1500_1749", "1750_1999", "2000_2999", "3000_3499", "3500_more")
# Initializing a data frame to store the results
result_df <- tibble(Range = ranges, Population = numeric(length(ranges)))
# Subtracting and aggregating population values
for (i in seq_along(ranges)) {
age_col <- paste0("P_", column_mappings[i], "_15_19_yrs")
total_col <- paste0("P_", column_mappings[i], "_Tot")
result_df$Population[i] <- mean(victoria_data_combined[[total_col]] - victoria_data_combined[[age_col]], na.rm = TRUE)
}
result_df$Range <- factor(result_df$Range, levels = ranges)
# Plotting the bar chart
ggplot(result_df, aes(x = Range, y = Population, fill = Range)) +
geom_col(show.legend = FALSE) +
labs(title = "Population by Income Range for Victoria",
x = "Income Range",
y = "Population (in thousands)") +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE,
eval = FALSE,
cache = FALSE,
warning = FALSE,
message = FALSE)
options(width=80, digits=3)
library(tidyverse)
library(sf)
library(ggplot2)
library(readxl)
# Loading election results data from local repo
votes <- read_csv(here::here("data/HouseDopByDivisionDownload-27966.csv"), skip = 1)
# Filtering rows where independents got elected
independent_wins <- votes %>%
filter(PartyAb == "IND" & Elected == "Y")
# Printing just the unique electorate names
print("2022 election Independent won elctorates:")
print(unique(independent_wins$DivisionNm))
# Loading data for the dataset from the local repo
g04_part1 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G04A_VIC_CED.csv"))
g04_part2 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G04B_VIC_CED.csv"))
# For the Kooyong Age plot
# Filtering and binding the datasets
g04_data_combined <- bind_rows(
g04_part1 %>% filter(CED_CODE_2021 == "CED226"),
g04_part2 %>% filter(CED_CODE_2021 == "CED226")
)
# Transforming data to long format and filtering out unnecessary columns
g04_data_long <- g04_data_combined %>%
pivot_longer(cols = starts_with("Age_yr_"), names_to = "age_group", values_to = "population") %>%
mutate(age_group = str_remove(age_group, "_P"),  # Remove suffix
age_group = str_replace(age_group, "Age_yr_100_yr_over", "100 and over"),
age_group = str_replace(age_group, "Age_yr_", "")) %>%
# Removing unnecessary columns
filter(!str_detect(age_group, "_F|_M"),
!str_detect(age_group, "0_17|18_")) %>%
mutate(age_group = case_when(
age_group == "18" ~ "18-24",
age_group %in% c("19", "20", "21", "22", "23", "24") ~ "18-24",
age_group %in% c("25", "26", "27", "28", "29") ~ "25-29",
age_group %in% c("30", "31", "32", "33", "34") ~ "30-34",
age_group %in% c("35", "36", "37", "38", "39") ~ "35-39",
age_group %in% c("40", "41", "42", "43", "44") ~ "40-44",
age_group %in% c("45", "46", "47", "48", "49") ~ "45-49",
age_group %in% c("50", "51", "52", "53", "54") ~ "50-54",
age_group %in% c("55", "56", "57", "58", "59") ~ "55-59",
age_group %in% c("60", "61", "62", "63", "64") ~ "60-64",
age_group %in% c("65", "66", "67", "68", "69") ~ "65-69",
age_group %in% c("70", "71", "72", "73", "74") ~ "70-74",
age_group %in% c("75", "76", "77", "78", "79") ~ "75-79",
str_detect(age_group, "80_84|85_89|90_94|95_99|100 and over") ~ age_group
)) %>%
# Remove rows where age_group is NA due to the case_when conditions
drop_na(age_group)
# Sum up populations within each age group
kooyong_age_data <- g04_data_long %>%
group_by(age_group) %>%
summarise(total_population = sum(population, na.rm = TRUE))
# Plotting the data
ggplot(kooyong_age_data, aes(x = age_group, y = total_population, fill = age_group)) +
geom_col() +
labs(title = "Population Distribution by Age Groups in Kooyong", x = "Age Groups", y = "Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# For the Victoria Age plot
# Combining the datasets without filtering for a specific CED_CODE_2021
g04_data_combined <- bind_rows(
g04_part1,
g04_part2
)
# Transforming data to long format
g04_data_long <- g04_data_combined %>%
pivot_longer(cols = starts_with("Age_yr_"), names_to = "age_group", values_to = "population") %>%
mutate(age_group = str_remove(age_group, "_P"),  # Remove suffix
age_group = str_replace(age_group, "Age_yr_100_yr_over", "100 and over"),
age_group = str_replace(age_group, "Age_yr_", "")) %>%
# Removing gender-specific and under-18 columns
filter(!str_detect(age_group, "_F|_M"),
!str_detect(age_group, "0_17|18_")) %>%
mutate(age_group = case_when(
age_group == "18" ~ "18-24",
age_group %in% c("19", "20", "21", "22", "23", "24") ~ "18-24",
age_group %in% c("25", "26", "27", "28", "29") ~ "25-29",
age_group %in% c("30", "31", "32", "33", "34") ~ "30-34",
age_group %in% c("35", "36", "37", "38", "39") ~ "35-39",
age_group %in% c("40", "41", "42", "43", "44") ~ "40-44",
age_group %in% c("45", "46", "47", "48", "49") ~ "45-49",
age_group %in% c("50", "51", "52", "53", "54") ~ "50-54",
age_group %in% c("55", "56", "57", "58", "59") ~ "55-59",
age_group %in% c("60", "61", "62", "63", "64") ~ "60-64",
age_group %in% c("65", "66", "67", "68", "69") ~ "65-69",
age_group %in% c("70", "71", "72", "73", "74") ~ "70-74",
age_group %in% c("75", "76", "77", "78", "79") ~ "75-79",
str_detect(age_group, "80_84|85_89|90_94|95_99|100 and over") ~ age_group
))%>%
# Filter out rows with NA in the population
filter(!is.na(age_group), !is.na(population))
# Calculate the average population within each age group
victoria_average_age_data <- g04_data_long %>%
group_by(age_group) %>%
summarise(average_population = mean(population, na.rm = TRUE))%>%
# Remove groups with NA average_population
filter(!is.na(average_population))
# Plotting the data
ggplot(victoria_average_age_data, aes(x = age_group, y = average_population, fill = age_group)) +
geom_col() +
labs(title = "Average Population Distribution by Age Groups for Victoria", x = "Age Groups", y = "Average Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Data taken out for Kooyong
kooyong_population_data_1 <- g04_part1 %>%
filter(CED_CODE_2021 == "CED226")
kooyong_population_data_2 <- g04_part2 %>%
filter(CED_CODE_2021 == "CED226")
# Summarizing the population data for both the genders
population_up_to_17_male <- kooyong_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_M$")) %>%
unlist() %>%
sum(na.rm = TRUE)
population_up_to_17_female <- kooyong_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_F$")) %>%
unlist() %>%
sum(na.rm = TRUE)
# Calculating the sum of population for each gender
total_male_population <- sum(kooyong_population_data_2 %>% select(starts_with("Tot_M")) %>% unlist(), na.rm = TRUE)
total_female_population <- sum(kooyong_population_data_2 %>% select(starts_with("Tot_F")) %>% unlist(), na.rm = TRUE)
# Adjusting the total populations by subtracting the populations up to age 17
adjusted_total_male_population <- total_male_population - population_up_to_17_male
adjusted_total_female_population <- total_female_population - population_up_to_17_female
# Creating a data frame for plotting
kooyong_gender_population <- data.frame(
Gender = c("Male", "Female"),
Adjusted_Population_Data = c(adjusted_total_male_population, adjusted_total_female_population)
)
# Plotting the bar chart
ggplot(kooyong_gender_population, aes(x = Gender, y = Adjusted_Population_Data, fill = Gender)) +
geom_col(width = 0.4) +
scale_y_continuous(labels = scales::comma) + # Adding comma formatting to the y-axis labels
labs(x = "Gender", y = "Population", title = "Population by Gender for Kooyong") +
theme_minimal()
# Data taken out for Victoria
victoria_population_data_1 <- g04_part1
victoria_population_data_2 <- g04_part2
# Summarizing the population data for both the genders
population_up_to_17_male <- victoria_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_M$")) %>%
unlist() %>%
sum(na.rm = TRUE)
population_up_to_17_female <- victoria_population_data_1 %>%
select(matches("^Age_yr_([0-9]|1[0-7])_F$")) %>%
unlist() %>%
sum(na.rm = TRUE)
# Calculating the sum of population for each gender
total_male_population <- sum(victoria_population_data_2 %>% select(starts_with("Tot_M")) %>% unlist(), na.rm = TRUE)
total_female_population <- sum(victoria_population_data_2 %>% select(starts_with("Tot_F")) %>% unlist(), na.rm = TRUE)
# Adjusting the total populations by subtracting the populations up to age 17
adjusted_total_male_population <- total_male_population - population_up_to_17_male
adjusted_total_female_population <- total_female_population - population_up_to_17_female
# Calculating the average of the adjusted total populations for the whole of Victoria
# Dividing by the number of data entries for a true average
avg_adjusted_male_population <- adjusted_total_male_population / nrow(g04_part2)
avg_adjusted_female_population <- adjusted_total_female_population / nrow(g04_part2)
# Creating a data frame for plotting
victoria_gender_population <- data.frame(
Gender = c("Male", "Female"),
Adjusted_Average_Population = c(avg_adjusted_male_population, avg_adjusted_female_population)
)
# Plot the bar chart
ggplot(victoria_gender_population, aes(x = Gender, y = Adjusted_Average_Population, fill = Gender)) +
geom_col(width = 0.4) +
scale_y_continuous(labels = scales::comma) +
labs(x = "Gender", y = "Population", title = "Population by Gender for Kooyong") +
theme_minimal()
# Taking relevant income data from the local repo
g17_part1 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G17B_VIC_CED.csv"))
g17_part2 <- read.csv(here::here("data/2021_Census_GCP_Commonwealth_Electroral_Division_for_VIC/2021Census_G17C_VIC_CED.csv"))
# Filtering data relevant to Kooyong
kooyong_data_combined <- bind_rows(
g17_part1 %>%
filter(CED_CODE_2021 == "CED226"),
g17_part2 %>%
filter(CED_CODE_2021 == "CED226")
)
# Constructing a mapping based on the income ranges
ranges <- c("Negative/Nil income", "$1-$149", "$150-$299", "$300-$399", "$400-$499",
"$500-$649", "$650-$799", "$800-$999", "$1,000-$1,249", "$1,250-$1,499",
"$1,500-$1,749", "$1,750-$1,999", "$2,000-$2,999", "$3,000-$3,499", "$3,500 or more")
column_mappings <- c("Neg_Nil_income", "1_149", "150_299", "300_399", "400_499",
"500_649", "650_799", "800_999", "1000_1249", "1250_1499",
"1500_1749", "1750_1999", "2000_2999", "3000_3499", "3500_more")
# Initializing a data frame to store the results
result_df <- tibble(Range = ranges, Population = numeric(length(ranges)))
# Subtracting and aggregating population values
for (i in seq_along(ranges)) {
age_col <- paste0("P_", column_mappings[i], "_15_19_yrs")
total_col <- paste0("P_", column_mappings[i], "_Tot")
# Taking mean here just for 'na' values resolution
result_df$Population[i] <- mean(kooyong_data_combined[[total_col]] - kooyong_data_combined[[age_col]], na.rm = TRUE)
}
result_df$Range <- factor(result_df$Range, levels = ranges)
# Plotting the bar chart
ggplot(result_df, aes(x = Range, y = Population, fill = Range)) +
geom_col(show.legend = FALSE) +
labs(title = "Population by Income Range for Kooyong",
x = "Income Range",
y = "Population (in thousands)") +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filtering data relevant to all Victoria
victoria_data_combined <- bind_rows(
g17_part1,
g17_part2
)
# Constructing a mapping based on the income ranges
ranges <- c("Negative/Nil income", "$1-$149", "$150-$299", "$300-$399", "$400-$499",
"$500-$649", "$650-$799", "$800-$999", "$1,000-$1,249", "$1,250-$1,499",
"$1,500-$1,749", "$1,750-$1,999", "$2,000-$2,999", "$3,000-$3,499", "$3,500 or more")
column_mappings <- c("Neg_Nil_income", "1_149", "150_299", "300_399", "400_499",
"500_649", "650_799", "800_999", "1000_1249", "1250_1499",
"1500_1749", "1750_1999", "2000_2999", "3000_3499", "3500_more")
# Initializing a data frame to store the results
result_df <- tibble(Range = ranges, Population = numeric(length(ranges)))
# Subtracting and aggregating population values
for (i in seq_along(ranges)) {
age_col <- paste0("P_", column_mappings[i], "_15_19_yrs")
total_col <- paste0("P_", column_mappings[i], "_Tot")
result_df$Population[i] <- mean(victoria_data_combined[[total_col]] - victoria_data_combined[[age_col]], na.rm = TRUE)
}
result_df$Range <- factor(result_df$Range, levels = ranges)
# Plotting the bar chart
ggplot(result_df, aes(x = Range, y = Population, fill = Range)) +
geom_col(show.legend = FALSE) +
labs(title = "Population by Income Range for Victoria",
x = "Income Range",
y = "Population (in thousands)") +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# reading the SA1 Geopackage data
G02_SA1_data <- read_sf(here::here("data/Geopackage_2021_G02_VIC_GDA2020/G02_VIC_GDA2020.gpkg"), layer = "G02_SA1_2021_VIC")
# Filtering out relevant columns to selected variables
G02_SA1_filtered <- G02_SA1_data %>%
select(SA1_CODE_2021, Median_rent_weekly, Average_household_size, SA1_NAME_2021)
# manipulate SA1 codes for extraction
G02_SA1_filtered <- G02_SA1_filtered %>%
mutate(SA1_CODE = paste0(substr(SA1_CODE_2021, 1, 1),
substr(SA1_CODE_2021, 6, 9),
substr(SA1_CODE_2021, 10, 11)))
#Converting SA1 code to character data
G02_SA1_filtered$SA1_CODE <- as.character(G02_SA1_filtered$SA1_CODE)
# calculate centroids for each SA1 region
G02_SA1_filtered <- G02_SA1_filtered |>
mutate(centroid = st_centroid(geom))
# reading SA1 codes for Kooyong from the Victoria electoral divisions SA1 and SA2 data set
Kooyong_SA1_codes <- read_excel("data/vic-by-SA2-and-SA1-by-division.xlsx", sheet = "KOOYONG")
# renaming columns for ease of understanding
colnames(Kooyong_SA1_codes) <- c("SA1_CODE", "New_Division", "Old_Division", "SA2_Name", "Actual_enrolment", "Projected_enrolment")
# joining SA1 GeoPackage data with Kooyong SA1 codes
G02_SA1_filtered_Kooyong <- G02_SA1_filtered %>%
inner_join(Kooyong_SA1_codes, by = c("SA1_CODE" = "SA1_CODE"), copy = TRUE)
# further filter out zero values for visualization
G02_SA1_filtered <- G02_SA1_filtered %>%
mutate(centroid = st_centroid(geom)) %>%
filter(Median_rent_weekly != 0) %>%
filter(Average_household_size != 0)
vic_elec_map <- read_sf(here::here("data/E_VIC21_region.shp")) %>%
mutate(DivisionNm = toupper(Elect_div)) %>%
mutate(geometry = st_zm(geometry))
# set projection to GDA1994 using EPSG:4283
st_crs(vic_elec_map$geometry,4283)
# transform projection from GDA1994 to GDA2020 using EPSG:7844
vic_elec_map$geometry = st_transform(vic_elec_map$geometry, 7844)
# plotting for household size and median weekly rent of Kooyong electorate
ggplot(G02_SA1_filtered_Kooyong) +
geom_sf(aes(geometry = centroid, color = Median_rent_weekly), shape = 3) +
geom_sf(data = vic_elec_map, aes(geometry = geometry), fill = "transparent", size = 1.2, color = "black") +
coord_sf(xlim = c(144.8, 145.2), ylim = c(-38.1, -37.6)) +
scale_color_viridis_c(name = "Median rent per week", option = "viridis")
ggplot(G02_SA1_filtered_Kooyong) +
geom_sf(aes(geometry = centroid, color = Average_household_size), shape = 3) +
geom_sf(data = vic_elec_map, aes(geometry = geometry), fill = "transparent", size = 1.2, color = "black") +
coord_sf(xlim = c(144.8, 145.2), ylim = c(-38.1, -37.6)) +
scale_color_viridis_c(name = "Size of Household", option = "viridis")
ggplot(G02_SA1_filtered) +
geom_sf(aes(geometry = centroid, color = Median_rent_weekly), shape = 3) +
geom_sf(data = vic_elec_map, aes(geometry = geometry), fill = "transparent", size = 1.2, color = "black") +
coord_sf(xlim = c(144.8, 145.2), ylim = c(-38.1, -37.6)) +
scale_color_viridis_c(name = "Median rent per week", option = "viridis")
ggplot(G02_SA1_filtered) +
geom_sf(aes(geometry = centroid, color = Average_household_size), shape = 3) +
geom_sf(data = vic_elec_map, aes(geometry = geometry), fill = "transparent", size = 1.2, color = "black") +
coord_sf(xlim = c(144.8, 145.2), ylim = c(-38.1, -37.6)) +
scale_color_viridis_c(name = "Size of Household", option = "viridis")
# determining with SA1 centroids overlap with which electoral regions
electoral_intersects = st_intersects(G02_SA1_filtered$centroid,
vic_elec_map$geometry,
sparse = FALSE)
arr_ind = which(electoral_intersects == TRUE, arr.ind = TRUE)
sa1_ind = arr_ind[,1]
division_ind = arr_ind[,2]
division_name = vic_elec_map$Elect_div[division_ind]
sa1_name = G02_SA1_filtered$SA1_NAME_2021[sa1_ind]
# save the SA1 region and its matching electorate into a data frame
sa1_divisions = data.frame(SA1_NAME_2021 = sa1_name,
DivisionNm = division_name)
# join SA1 data and divisions intersected
vicmap_sa1_G02_electorates  <- G02_SA1_filtered %>%
right_join(sa1_divisions)
# Combine the data from electorates together using group_by
vicmap_sa1_G02_electorates_grouped =  vicmap_sa1_G02_electorates |>
group_by(DivisionNm) |>
summarise(Avg_household_size = mean(Average_household_size)) |>
ungroup()
# Plot results to check assignment
ggplot() +
geom_sf(data = vicmap_sa1_G02_electorates_grouped,
aes(geometry = geom, fill = Avg_household_size)) +
theme_bw() +
theme(legend.position = "bottom")
# Filtering out Kooyong data
Kooyong_household <- vicmap_sa1_G02_electorates %>%
filter(DivisionNm == "Kooyong") %>%
summarise(Avg_household_size = mean(Average_household_size), na.rm = TRUE) %>%
ungroup()
# Plotting
ggplot() +
geom_sf(data = Kooyong_household,
aes(geometry = geom, fill = Avg_household_size)) +
theme_bw() +
theme(legend.position = "bottom")
# Combine the data from electorates together using group_by
vicmap_sa1_G02_electorates_grouped =  vicmap_sa1_G02_electorates |>
group_by(DivisionNm) |>
summarise(avg_median_weekly_rent = mean(Median_rent_weekly)) |>
ungroup()
# Plot results to check assignment
ggplot() +
geom_sf(data = vicmap_sa1_G02_electorates_grouped,
aes(geometry = geom, fill = avg_median_weekly_rent)) +
theme_bw() +
theme(legend.position = "bottom")
# Filtering Koooyong relevant data
kooyong_rent <- vicmap_sa1_G02_electorates %>%
filter(DivisionNm == "Kooyong") %>%
summarise(avg_median_weekly_rent = mean(Median_rent_weekly, na.rm = TRUE)) %>%
ungroup()
ggplot() +
geom_sf(data = kooyong_rent,
aes(geometry = geom, fill = avg_median_weekly_rent)) +
theme_bw() +
theme(legend.position = "bottom")
